<?xml version="1.0" encoding="utf-8" ?>
<pages:BasePage
    x:Class="CommunityToolkit.Maui.Sample.Pages.Views.MediaElementPage"
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
    xmlns:constants="clr-namespace:CommunityToolkit.Maui.Sample.Constants"
    xmlns:converters="clr-namespace:CommunityToolkit.Maui.Sample.Converters"
    xmlns:pages="clr-namespace:CommunityToolkit.Maui.Sample.Pages"
    xmlns:toolkit="http://schemas.microsoft.com/dotnet/2022/maui/toolkit"
    xmlns:viewModels="clr-namespace:CommunityToolkit.Maui.Sample.ViewModels.Views"
    Title="MediaElement"
    x:DataType="viewModels:MediaElementViewModel"
    x:TypeArguments="viewModels:MediaElementViewModel">
    <pages:BasePage.Resources>
        <converters:SecondsToStringConverter x:Key="SecondsToStringConverter" />
    </pages:BasePage.Resources>

    <ScrollView>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="220" />
                <RowDefinition Height="50" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <toolkit:MediaElement
                x:Name="MediaElement"
                MediaEnded="OnMediaEnded"
                MediaFailed="OnMediaFailed"
                MediaOpened="OnMediaOpened"
                PositionChanged="OnPositionChanged"
                SeekCompleted="OnSeekCompleted"
                ShouldAutoPlay="True"
                StateChanged="OnStateChanged">
                <toolkit:MediaElement.Source>
                    <toolkit:MediaItem
                        MetadataArtist="Blender Foundation"
                        MetadataArtworkUrl="https://lh3.googleusercontent.com/pw/AP1GczNRrebWCJvfdIau1EbsyyYiwAfwHS0JXjbioXvHqEwYIIdCzuLodQCZmA57GADIo5iB3yMMx3t_vsefbfoHwSg0jfUjIXaI83xpiih6d-oT7qD_slR0VgNtfAwJhDBU09kS5V2T5ZML-WWZn8IrjD4J-g=w1792-h1024-s-no-gm"
                        MetadataTitle="Big Buck Bunny"
                        Source="{x:Static constants:StreamingVideoUrls.BuckBunny}" />
                </toolkit:MediaElement.Source>
            </toolkit:MediaElement>
            <HorizontalStackLayout Grid.Row="1" Padding="0,0,0,15">
                <Label x:DataType="toolkit:MediaElement" HorizontalOptions="Center">
                    <Label.Text>
                        <MultiBinding StringFormat="{}Current State: {0} - Dimensions: {1}x{2}">
                            <Binding Path="CurrentState" Source="{x:Reference MediaElement}" />
                            <Binding Path="MediaWidth" Source="{x:Reference MediaElement}" />
                            <Binding Path="MediaHeight" Source="{x:Reference MediaElement}" />
                        </MultiBinding>
                    </Label.Text>
                </Label>

            </HorizontalStackLayout>

            <Grid
                Grid.Row="2"
                Padding="0,10,0,10"
                ColumnDefinitions="*,*,*,*,*"
                ColumnSpacing="5">
                <Button
                    Grid.Column="0"
                    Clicked="OnPlayClicked"
                    Text="Play" />
                <Button
                    Grid.Column="1"
                    Clicked="OnPauseClicked"
                    Text="Pause" />
                <Button
                    Grid.Column="2"
                    Clicked="OnStopClicked"
                    Text="Stop" />
                <Button
                    Grid.Column="3"
                    Clicked="OnMuteClicked"
                    Text="Mute">
                    <Button.Triggers>
                        <DataTrigger
                            x:DataType="toolkit:MediaElement"
                            Binding="{Binding ShouldMute, Source={x:Reference MediaElement}}"
                            TargetType="Button"
                            Value="True">
                            <Setter Property="Text" Value="Unmute" />
                        </DataTrigger>
                        <DataTrigger
                            x:DataType="toolkit:MediaElement"
                            Binding="{Binding ShouldMute, Source={x:Reference MediaElement}}"
                            TargetType="Button"
                            Value="False">
                            <Setter Property="Text" Value="Mute" />
                        </DataTrigger>
                    </Button.Triggers>
                </Button>
                <Button
                    Grid.Column="4"
                    Clicked="DisplayPopup"
                    Text="Popup" />
            </Grid>

            <Slider
                x:Name="PositionSlider"
                Grid.Row="3"
                DragCompleted="Slider_DragCompleted"
                DragStarted="Slider_DragStarted"
                MinimumTrackColor="Gray" />

            <Grid Grid.Row="4" HorizontalOptions="Fill">
                <Label
                    x:DataType="toolkit:MediaElement"
                    HorizontalOptions="Start"
                    Text="{Binding Position, Source={x:Reference MediaElement}, Converter={StaticResource SecondsToStringConverter}}" />
                <Label
                    x:DataType="toolkit:MediaElement"
                    HorizontalOptions="End"
                    HorizontalTextAlignment="End"
                    Text="{Binding Duration, Source={x:Reference MediaElement}, Converter={StaticResource SecondsToStringConverter}}" />
            </Grid>

            <VerticalStackLayout
                Grid.Row="5"
                Padding="0,20,0,0"
                Spacing="5">
                <Button Clicked="ChangeSourceClicked" Text="Change Source" />

                <Grid ColumnDefinitions="*, 100" ColumnSpacing="5">
                    <Entry
                        x:Name="CustomSourceEntry"
                        HorizontalOptions="FillAndExpand"
                        Placeholder="Enter URL" />
                    <Button
                        Grid.Column="1"
                        Clicked="Button_Clicked"
                        Text="Load" />
                </Grid>

                <Button Clicked="ChangeAspectClicked" Text="Change Aspect" />
            </VerticalStackLayout>

            <HorizontalStackLayout
                Grid.Row="6"
                Padding="0,10,0,10"
                Spacing="5">
                <Label Margin="20,10" x:DataType="toolkit:MediaElement">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Speed:" />
                            <Span Text="{Binding Source={x:Reference MediaElement}, Path=Speed}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <Button Clicked="OnSpeedMinusClicked" Text="-" />
                <Button Clicked="OnSpeedPlusClicked" Text="+" />
            </HorizontalStackLayout>

            <HorizontalStackLayout
                Grid.Row="7"
                Padding="0,10,0,10"
                Spacing="5">
                <Label Margin="20,10" x:DataType="toolkit:MediaElement">
                    <Label.FormattedText>
                        <FormattedString>
                            <Span Text="Volume:" />
                            <Span Text="{Binding Source={x:Reference MediaElement}, Path=Volume, StringFormat='{}{0:P0}'}" />
                        </FormattedString>
                    </Label.FormattedText>
                </Label>

                <Button Clicked="OnVolumeMinusClicked" Text="-" />
                <Button Clicked="OnVolumePlusClicked" Text="+" />
            </HorizontalStackLayout>

            <VerticalStackLayout Grid.Row="8">
                <HorizontalStackLayout Padding="0,0,0,10">
                    <Switch
                        Margin="0,0,5,0"
                        x:DataType="toolkit:MediaElement"
                        IsToggled="{Binding Source={x:Reference MediaElement}, Path=ShouldShowPlaybackControls}"
                        OnColor="LimeGreen"
                        ThumbColor="White" />
                    <Label Text="Show playback controls" VerticalOptions="Center" />
                </HorizontalStackLayout>
                <HorizontalStackLayout Padding="0,0,0,10">
                    <Switch
                        Margin="0,0,5,0"
                        x:DataType="toolkit:MediaElement"
                        IsToggled="{Binding Source={x:Reference MediaElement}, Path=ShouldLoopPlayback}"
                        OnColor="LimeGreen"
                        ThumbColor="White" />
                    <Label Text="Loop media" VerticalOptions="Center" />
                </HorizontalStackLayout>
                <HorizontalStackLayout>
                    <Switch
                        Margin="0,0,5,0"
                        x:DataType="toolkit:MediaElement"
                        IsToggled="{Binding Source={x:Reference MediaElement}, Path=ShouldKeepScreenOn}"
                        OnColor="LimeGreen"
                        ThumbColor="White" />
                    <Label Text="Keep screen on" VerticalOptions="Center" />
                </HorizontalStackLayout>
            </VerticalStackLayout>
        </Grid>
    </ScrollView>
</pages:BasePage>
